
server {
include /etc/nginx/mime.types;
sendfile on;
listen 4201;
server_name localhost;

ssl_certificate /etc/nginx/cert.crt;
ssl_certificate_key /etc/nginx/cert.key;

ssl on;
ssl_session_cache builtin:1000 shared:SSL:10m;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers HIGH:!aNULL:!eNULL:!EXPORT:!CAMELLIA:!DES:!MD5:!PSK:!RC4;
ssl_prefer_server_ciphers on;


location / {

        # Activer le proxy
        proxy_set_header                X-Real-IP $remote_addr;
        #proxy_set_header                X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_pass                      http://localhost:5500/YOLO_Web_assembly_front/helloworld_web_ASSEMBLY/;
        proxy_redirect                  off;
        proxy_buffers                   32 16k;
        proxy_busy_buffers_size         64k;

    
    proxy_set_header Upgrade $http_upgrade; # allow websockets
    #proxy_set_header Connection $connection_upgrade;
    proxy_set_header X-Forwarded-For $remote_addr; # preserve client IP
    include       /etc/nginx/mime.types;
    
        # Ajouter les headers de contrôle d'accès CORS
            add_header    'Access-Control-Allow-Origin' '*' always;
            add_header    'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    #    add_header    'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept' always;
    #    add_header    'Access-Control-Allow-Credentials' 'true' always;
}

    location /css.css {
        proxy_pass http://127.0.0.1:5500/YOLO_Web_assembly_front/helloworld_web_ASSEMBLY/css.css;
    }
    location /style_index.css{
        proxy_pass http://localhost:5500/YOLO_Web_assembly_front/helloworld_web_ASSEMBLY/style_index.css;
    }
    location /request.js {
        proxy_pass http://127.0.0.1:5500/YOLO_Web_assembly_front/helloworld_web_ASSEMBLY/request.js;
    }

    location /css/main.css {
        proxy_pass http://localhost:9000/css/main.css;
    }
    
    location /js/yolo_web_rtc.js {

        proxy_pass http://localhost:9000/js/yolo_web_rtc.js;
    }
    
    location /socket.io/socket.io.js {

        add_header 'Content-Type' 'application/javascript';
        proxy_pass http://localhost:9000/socket.io/socket.io.js;	
    }
    
    location /socket.io/ {
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_pass	http://localhost:9000/socket.io/;
}
    

    location /test {
        add_header    'Access-Control-Allow-Origin' '*' always;
        add_header    'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        proxy_pass http://localhost:30501/test;

    }

    location /signup {
        add_header    'Access-Control-Allow-Origin' '*' always;
        add_header    'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        proxy_pass http://localhost:30501/signup;
    }

    location /signin {
        add_header    'Access-Control-Allow-Origin' '*' always;
        add_header    'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        proxy_pass https://localhost:30601/signin;

    }
    
    location /get_users {
        add_header    'Access-Control-Allow-Origin' '*' always;
        add_header    'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        proxy_pass http://localhost:30700/get_users;
    }

    location /front {
        add_header    'Access-Control-Allow-Origin' '*' always;
        add_header    'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        proxy_pass http://yoloooo.com:30900/front;
    }

    location /img/ {
    
        proxy_pass http://localhost:9000$uri;
}



    location /me {
        
        #add_header 'Access-Control-Allow-Headers' 'Access-Control-Allow-Origin, Origin, authorization' always;
        # proxy_set_header Authorization $http_authorization;
        proxy_pass_header  Authorization;
        add_header 'Access-Control-Request-Methods' 'GET, OPTION';
        proxy_pass_header 'Access-Control-Allow-Origin';
        proxy_pass http://localhost:8082/me;
        
    
    }

    location /app {
    
    
        proxy_set_header Access-Control-Allow-Origin *;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        proxy_connect_timeout 4s;
        proxy_read_timeout 86400s;
        proxy_send_timeout 12s;
        
        proxy_pass http://localhost:9000/;
        #  proxy_set_header Upgrade $http_upgrade;
        #proxy_set_header Connection "upgrade";

}
    
    location /add_friend {
        proxy_pass http://localhost:8084/add_friend;
    }
    
    location /get_your_friend {
        proxy_pass http://localhost:8084/get_your_friend;
    }
    
    location /supp_friend {
        proxy_pass http://localhost:8084/supp_friend;
    }

    location /get_your_name {
        proxy_pass http://localhost:8082/get_your_name;
    }
    

}

server {
    listen 4200;
    server_name localhost;

    location /stock_bundle {
    
    add_header    'Access-Control-Allow-Origin' '*' always;
    add_header    'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
proxy_pass http://localhost:8040/stock_bundle;


# Preflighted requests
    if ($request_method = OPTIONS ) {
        add_header "Access-Control-Allow-Origin"  *;
                add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
                    add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
                            return 200;
                                }
    }
    
    location /get_bundle_of {
    
    add_header    'Access-Control-Allow-Origin' '*' always;
    proxy_pass http://localhost:8040/get_bundle_of;
    if ($request_method = OPTIONS ) {
    add_header "Access-Control-Allow-Origin"  *;
    add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
    add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
    return 200;
    }
}

}
